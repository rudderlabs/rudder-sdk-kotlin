name: 'Setup and Validate'
description: 'Common setup and validation steps for Android CI/CD workflows'

inputs:
  base_branch:
    description: 'Base branch to compare against for finding affected modules'
    required: false
    default: ''
  run_aar_build:
    description: 'Whether to build AAR/JAR files for library modules'
    required: false
    default: 'false'
  sonar_token:
    description: 'SonarCloud token for analysis'
    required: false
    default: ''

outputs:
  affected_modules:
    description: 'Comma-separated list of affected modules'
    value: ${{ steps.find-modules.outputs.affected_modules }}
  built_modules:
    description: 'Comma-separated list of built modules (for AAR generation)'
    value: ${{ steps.build-aars.outputs.built_modules }}
  has_artifacts:
    description: 'Whether AAR/JAR artifacts were generated'
    value: ${{ steps.build-aars.outputs.has_artifacts }}

runs:
  using: 'composite'
  steps:
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      shell: bash
      run: chmod +x gradlew

    - name: Check Gradle build scripts dependencies are sorted
      shell: bash
      run: ./gradlew buildEnvironment --dry-run

    - name: Find affected modules
      id: find-modules
      shell: bash
      run: |
        # Make script executable and run it
        chmod +x scripts/find-affected-modules.sh
        # Set GITHUB_BASE_REF if provided via base_branch input (for PR context)
        if [ -n "${{ inputs.base_branch }}" ]; then
          export GITHUB_BASE_REF="${{ inputs.base_branch }}"
        fi
        ./scripts/find-affected-modules.sh "${{ inputs.base_branch }}"

    - name: Run Detekt on affected modules
      shell: bash
      run: |
        chmod +x scripts/run-quality-checks.sh
        ./scripts/run-quality-checks.sh "${{ steps.find-modules.outputs.affected_modules }}" "detekt"

    - name: Run Android Lint on affected modules
      shell: bash
      run: |
        ./scripts/run-quality-checks.sh "${{ steps.find-modules.outputs.affected_modules }}" "lint"

    - name: Run SonarCloud Analysis
      if: inputs.sonar_token != ''
      uses: SonarSource/sonarqube-scan-action@2500896589ef8f7247069a56136f8dc177c27ccf
      env:
        GITHUB_TOKEN: ${{ github.token }}
        SONAR_TOKEN: ${{ inputs.sonar_token }}

    - name: Run tests on affected modules
      shell: bash
      run: |
        ./scripts/run-quality-checks.sh "${{ steps.find-modules.outputs.affected_modules }}" "test"

    - name: Build affected modules
      shell: bash
      run: |
        ./scripts/run-quality-checks.sh "${{ steps.find-modules.outputs.affected_modules }}" "build"

    - name: Build Library Module AARs
      id: build-aars
      if: inputs.run_aar_build == 'true'
      shell: bash
      run: |
        chmod +x scripts/build-aars.sh
        ./scripts/build-aars.sh "${{ steps.find-modules.outputs.affected_modules }}"

    - name: Upload test reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-reports-${{ github.run_id }}
        path: |
          **/build/reports/tests/
          **/build/reports/detekt/
          **/build/reports/lint-results*.html
