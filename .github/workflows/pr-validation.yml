name: PR Validation

on:
  pull_request:
    branches: [ "develop", "feat/*", "refactor/*", "release/*" ]
    types: [ "opened", "reopened", "synchronize", "edited" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.head_ref }}
  cancel-in-progress: true

jobs:
  # PR Title validation - runs in parallel and is required for success
  pr-title-check:
    name: PR Title Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check PR Title
        uses: ./.github/actions/pr-title-check

  # SonarCloud analysis - runs in parallel, independent of other checks
  sonarcloud-analysis:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better analysis

      - name: Run SonarCloud Analysis
        uses: ./.github/actions/sonarcloud-analysis
        with:
          sonar_token: ${{ secrets.SONAR_TOKEN }}

  # Setup and find affected modules
  setup-and-find-modules:
    name: Setup & Find Modules
    runs-on: ubuntu-latest
    outputs:
      affected_modules: ${{ steps.setup.outputs.affected_modules }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for detecting changes

      - name: Setup and Find Modules
        id: setup
        uses: ./.github/actions/setup-and-find-modules
        with:
          base_branch: ${{ github.base_ref }}

  # Detekt static analysis - runs in parallel
  detekt-check:
    name: Detekt Check
    runs-on: ubuntu-latest
    needs: setup-and-find-modules
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Detekt
        uses: ./.github/actions/detekt-check
        with:
          affected_modules: ${{ needs.setup-and-find-modules.outputs.affected_modules }}

  # Android Lint - runs in parallel
  lint-check:
    name: Lint Check
    runs-on: ubuntu-latest
    needs: setup-and-find-modules
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Lint
        uses: ./.github/actions/lint-check
        with:
          affected_modules: ${{ needs.setup-and-find-modules.outputs.affected_modules }}

  # Unit tests - runs in parallel
  test-check:
    name: Test Check
    runs-on: ubuntu-latest
    needs: setup-and-find-modules
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Tests
        uses: ./.github/actions/test-check
        with:
          affected_modules: ${{ needs.setup-and-find-modules.outputs.affected_modules }}

  # Build modules after all quality checks pass
  build-check:
    name: Build Check
    runs-on: ubuntu-latest
    needs: [setup-and-find-modules, detekt-check, lint-check, test-check]
    outputs:
      affected_modules: ${{ steps.build.outputs.affected_modules }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build Modules
        id: build
        uses: ./.github/actions/build-check
        with:
          affected_modules: ${{ needs.setup-and-find-modules.outputs.affected_modules }}

      - name: Notify Slack
        if: always()
        run: |
          chmod +x scripts/send-slack-notification.sh

          # Determine status
          if [ "${{ job.status }}" = "success" ]; then
            STATUS="passed"
          else
            STATUS="failed"
          fi

          # Set environment variables for the script
          export GITHUB_REPOSITORY="${{ github.repository }}"
          export GITHUB_EVENT_NUMBER="${{ github.event.number }}"
          export GITHUB_EVENT_PR_TITLE="${{ github.event.pull_request.title }}"
          export GITHUB_HEAD_REF="${{ github.head_ref }}"
          export GITHUB_BASE_REF="${{ github.base_ref }}"
          export GITHUB_ACTOR="${{ github.actor }}"
          export GITHUB_EVENT_PR_HTML_URL="${{ github.event.pull_request.html_url }}"
          export GITHUB_RUN_ID="${{ github.run_id }}"
          export SLACK_WEBHOOK_URL="${{ secrets.SLACK_WEBHOOK_URL }}"

          ./scripts/send-slack-notification.sh "pr" "$STATUS" "" ""

  # Summary job that depends on all required jobs
  pr-validation-summary:
    name: PR Validation Summary
    runs-on: ubuntu-latest
    needs: [pr-title-check, setup-and-find-modules, detekt-check, lint-check, test-check, build-check, sonarcloud-analysis]
    if: always()
    steps:
      - name: Check all required jobs
        run: |
          echo "PR Title Check: ${{ needs.pr-title-check.result }}"
          echo "Setup & Find Modules: ${{ needs.setup-and-find-modules.result }}"
          echo "Detekt Check: ${{ needs.detekt-check.result }}"
          echo "Lint Check: ${{ needs.lint-check.result }}"
          echo "Test Check: ${{ needs.test-check.result }}"
          echo "Build Check: ${{ needs.build-check.result }}"
          echo "SonarCloud Analysis: ${{ needs.sonarcloud-analysis.result }}"

          # Fail if any required job failed
          if [[ "${{ needs.pr-title-check.result }}" != "success" || "${{ needs.setup-and-find-modules.result }}" != "success" || "${{ needs.detekt-check.result }}" != "success" || "${{ needs.lint-check.result }}" != "success" || "${{ needs.test-check.result }}" != "success" || "${{ needs.build-check.result }}" != "success" || "${{ needs.sonarcloud-analysis.result }}" != "success" ]]; then
            echo "❌ PR validation failed - one or more required checks failed"
            exit 1
          fi

          echo "✅ All PR validation checks passed successfully"
