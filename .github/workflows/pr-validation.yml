name: PR Validation

on:
  pull_request:
    branches: [ "develop", "feat/*" ]
    types: [ "opened", "reopened", "synchronize" ]

jobs:
  validate-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Check PR title
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            chore
            refactor
            test
            ci
          requireScope: false

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for detecting changes

      - name: Merge with target branch
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git fetch origin ${{ github.base_ref }}
          git merge origin/${{ github.base_ref }}

      - name: Setup and Validate
        id: validate
        uses: ./.github/actions/setup-and-validate
        with:
          base_branch: ${{ github.base_ref }}
          run_aar_build: 'true'
          sonar_token: ${{ secrets.SONAR_TOKEN }}

      - name: Upload Library AARs
        if: steps.validate.outputs.has_artifacts == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: library-aars
          path: |
            core/build/libs/*.jar
            android/build/outputs/aar/*-release.aar
            integrations/*/build/outputs/aar/*-release.aar
          retention-days: 30

      - name: Notify Slack
        if: always()
        run: |
          chmod +x scripts/send-slack-notification.sh
          
          # Determine status
          if [ "${{ job.status }}" = "success" ]; then
            STATUS="passed"
          else
            STATUS="failed"
          fi
          
          # Set environment variables for the script
          export GITHUB_REPOSITORY="${{ github.repository }}"
          export GITHUB_EVENT_NUMBER="${{ github.event.number }}"
          export GITHUB_EVENT_PR_TITLE="${{ github.event.pull_request.title }}"
          export GITHUB_HEAD_REF="${{ github.head_ref }}"
          export GITHUB_BASE_REF="${{ github.base_ref }}"
          export GITHUB_ACTOR="${{ github.actor }}"
          export GITHUB_EVENT_PR_HTML_URL="${{ github.event.pull_request.html_url }}"
          export GITHUB_RUN_ID="${{ github.run_id }}"
          export SLACK_WEBHOOK_URL="${{ secrets.SLACK_WEBHOOK_URL }}"
          
          ./scripts/send-slack-notification.sh "pr" "$STATUS" "${{ steps.validate.outputs.built_modules }}" "${{ steps.validate.outputs.has_artifacts }}"
