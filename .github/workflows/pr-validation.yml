name: PR Validation

on:
  pull_request:
    branches: [ "develop", "feat/*", "fix/*", "chore/*", "refactor/*", "release/*", "hotfix/*" ]
    types: [ "opened", "reopened", "synchronize" ]

jobs:
  # PR Title validation - runs in parallel and is required for success
  pr-title-check:
    name: PR Title Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check PR Title
        uses: ./.github/actions/pr-title-check

  # SonarCloud analysis - runs in parallel, independent of other checks
  sonarcloud-analysis:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better analysis

      - name: Run SonarCloud Analysis
        uses: ./.github/actions/sonarcloud-analysis
        with:
          sonar_token: ${{ secrets.SONAR_TOKEN }}

  # Main code validation with artifact building
  code-validation:
    name: Code Validation & Artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for detecting changes

      - name: Merge with target branch
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git fetch origin ${{ github.base_ref }}
          git merge origin/${{ github.base_ref }} --no-edit

      - name: Setup and Validate
        id: validate
        uses: ./.github/actions/setup-and-validate
        with:
          base_branch: ${{ github.base_ref }}
          run_aar_build: 'true'

      - name: Upload Library AARs
        if: steps.validate.outputs.has_artifacts == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: library-aars
          path: |
            core/build/libs/*.jar
            android/build/outputs/aar/*-release.aar
            integrations/*/build/outputs/aar/*-release.aar
          retention-days: 30

      - name: Notify Slack
        if: always()
        run: |
          chmod +x scripts/send-slack-notification.sh
          
          # Determine status
          if [ "${{ job.status }}" = "success" ]; then
            STATUS="passed"
          else
            STATUS="failed"
          fi
          
          # Set environment variables for the script
          export GITHUB_REPOSITORY="${{ github.repository }}"
          export GITHUB_EVENT_NUMBER="${{ github.event.number }}"
          export GITHUB_EVENT_PR_TITLE="${{ github.event.pull_request.title }}"
          export GITHUB_HEAD_REF="${{ github.head_ref }}"
          export GITHUB_BASE_REF="${{ github.base_ref }}"
          export GITHUB_ACTOR="${{ github.actor }}"
          export GITHUB_EVENT_PR_HTML_URL="${{ github.event.pull_request.html_url }}"
          export GITHUB_RUN_ID="${{ github.run_id }}"
          export SLACK_WEBHOOK_URL="${{ secrets.SLACK_WEBHOOK_URL }}"
          
          ./scripts/send-slack-notification.sh "pr" "$STATUS" "${{ steps.validate.outputs.built_modules }}" "${{ steps.validate.outputs.has_artifacts }}"

  # Summary job that depends on all required jobs
  pr-validation-summary:
    name: PR Validation Summary
    runs-on: ubuntu-latest
    needs: [ pr-title-check, code-validation ]
    if: always()
    steps:
      - name: Check all required jobs
        run: |
          echo "PR Title Check: ${{ needs.pr-title-check.result }}"
          echo "Code Validation: ${{ needs.code-validation.result }}"

          # Fail if any required job failed
          if [[ "${{ needs.pr-title-check.result }}" != "success" || "${{ needs.code-validation.result }}" != "success" ]]; then
            echo "❌ PR validation failed - one or more required checks failed"
            exit 1
          fi

          echo "✅ All PR validation checks passed successfully"
