name: PR Validation

on:
  pull_request:
    branches: [ "develop", "feat/*", "refactor/*", "release/*", "ci/*", "fix/*" ]
    types: [ "opened", "reopened", "synchronize", "edited" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.head_ref }}
  cancel-in-progress: true

jobs:
  # PR Title validation - runs in parallel and is required for success
  pr-title-check:
    name: PR Title Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check PR Title
        uses: ./.github/actions/pr-title-check

  # SonarCloud analysis - runs in parallel, independent of other checks
  sonarcloud-analysis:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better analysis

      - name: Run SonarCloud Analysis
        uses: ./.github/actions/sonarcloud-analysis
        with:
          sonar_token: ${{ secrets.SONAR_TOKEN }}

  # Setup and find affected modules
  setup-and-find-modules:
    name: Setup & Find Modules
    runs-on: ubuntu-latest
    outputs:
      affected_modules: ${{ steps.setup.outputs.affected_modules }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for detecting changes

      - name: Setup and Find Modules
        id: setup
        uses: ./.github/actions/setup-and-find-modules
        with:
          base_branch: ${{ github.base_ref }}

  # Detekt static analysis - runs in parallel
  detekt-check:
    name: Detekt Check
    runs-on: ubuntu-latest
    needs: setup-and-find-modules
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Detekt
        uses: ./.github/actions/detekt-check
        with:
          affected_modules: ${{ needs.setup-and-find-modules.outputs.affected_modules }}

  # Android Lint - runs in parallel
  lint-check:
    name: Lint Check
    runs-on: ubuntu-latest
    needs: setup-and-find-modules
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Lint
        uses: ./.github/actions/lint-check
        with:
          affected_modules: ${{ needs.setup-and-find-modules.outputs.affected_modules }}

  # Unit tests - runs in parallel
  test-check:
    name: Test Check
    runs-on: ubuntu-latest
    needs: setup-and-find-modules
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Tests
        uses: ./.github/actions/test-check
        with:
          affected_modules: ${{ needs.setup-and-find-modules.outputs.affected_modules }}

  # Build modules after all quality checks pass
  build-check:
    name: Build Check
    runs-on: ubuntu-latest
    needs: [ setup-and-find-modules, detekt-check, lint-check, test-check ]
    outputs:
      affected_modules: ${{ steps.build.outputs.affected_modules }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build Modules
        id: build
        uses: ./.github/actions/build-check
        with:
          affected_modules: ${{ needs.setup-and-find-modules.outputs.affected_modules }}





  # Summary job that depends on all required jobs
  pr-validation-summary:
    name: PR Validation Summary
    runs-on: ubuntu-latest
    needs: [ pr-title-check, setup-and-find-modules, detekt-check, lint-check, test-check, build-check, sonarcloud-analysis ]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check all required jobs and send Slack notification
        run: |
          echo "=== PR Validation Summary ==="
          echo "PR Title Check: ${{ needs.pr-title-check.result }}"
          echo "Setup & Find Modules: ${{ needs.setup-and-find-modules.result }}"
          echo "Detekt Check: ${{ needs.detekt-check.result }}"
          echo "Lint Check: ${{ needs.lint-check.result }}"
          echo "Test Check: ${{ needs.test-check.result }}"
          echo "Build Check: ${{ needs.build-check.result }}"
          echo "SonarCloud Analysis: ${{ needs.sonarcloud-analysis.result }}"
          echo "============================="

          # Determine overall status and collect failure details
          FAILED_CHECKS=""
          OVERALL_STATUS="passed"

          if [[ "${{ needs.pr-title-check.result }}" != "success" ]]; then
            FAILED_CHECKS="${FAILED_CHECKS}• PR Title Check (${{ needs.pr-title-check.result }}) - Check title format follows conventional commits\n"
            OVERALL_STATUS="failed"
          fi

          if [[ "${{ needs.sonarcloud-analysis.result }}" != "success" ]]; then
            FAILED_CHECKS="${FAILED_CHECKS}• SonarCloud Analysis (${{ needs.sonarcloud-analysis.result }}) - Code quality issues detected\n"
            OVERALL_STATUS="failed"
          fi

          if [[ "${{ needs.setup-and-find-modules.result }}" != "success" ]]; then
            FAILED_CHECKS="${FAILED_CHECKS}• Setup & Find Modules (${{ needs.setup-and-find-modules.result }}) - Environment setup failed\n"
            OVERALL_STATUS="failed"
          fi

          if [[ "${{ needs.detekt-check.result }}" != "success" ]]; then
            FAILED_CHECKS="${FAILED_CHECKS}• Detekt Check (${{ needs.detekt-check.result }}) - Code style issues detected\n"
            OVERALL_STATUS="failed"
          fi

          if [[ "${{ needs.lint-check.result }}" != "success" ]]; then
            FAILED_CHECKS="${FAILED_CHECKS}• Lint Check (${{ needs.lint-check.result }}) - Android lint issues detected\n"
            OVERALL_STATUS="failed"
          fi

          if [[ "${{ needs.test-check.result }}" != "success" ]]; then
            FAILED_CHECKS="${FAILED_CHECKS}• Test Check (${{ needs.test-check.result }}) - Unit tests failed\n"
            OVERALL_STATUS="failed"
          fi

          if [[ "${{ needs.build-check.result }}" != "success" ]]; then
            FAILED_CHECKS="${FAILED_CHECKS}• Build Check (${{ needs.build-check.result }}) - Build failed\n"
            OVERALL_STATUS="failed"
          fi

          echo "Overall Status: $OVERALL_STATUS"
          if [[ "$OVERALL_STATUS" == "failed" ]]; then
            echo -e "Failed Checks:\n$FAILED_CHECKS"
          fi

          # Send Slack notification
          chmod +x scripts/send-slack-notification.sh

          # Pass failure information to the script (remove trailing newline)
          FAILED_CHECKS_CLEAN=$(echo -e "$FAILED_CHECKS" | sed 's/\\n$//')
          ./scripts/send-slack-notification.sh "pr" "$OVERALL_STATUS" "$FAILED_CHECKS_CLEAN" ""

          # Fail the job if any required job failed
          if [[ "$OVERALL_STATUS" == "failed" ]]; then
            echo "❌ PR validation failed - one or more required checks failed"
            exit 1
          fi

          echo "✅ All PR validation checks passed successfully"
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_EVENT_NUMBER: ${{ github.event.number }}
          GITHUB_EVENT_PR_TITLE: ${{ github.event.pull_request.title }}
          GITHUB_HEAD_REF: ${{ github.head_ref }}
          GITHUB_BASE_REF: ${{ github.base_ref }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_EVENT_PR_HTML_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
